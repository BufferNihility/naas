basePath: /api/v1
definitions:
  api.Result:
    properties:
      data:
        type: object
      error:
        $ref: '#/definitions/api.ResultError'
        type: object
      status:
        type: string
    type: object
  api.ResultError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  api.userCreateModel:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    type: object
  model.OAuth2ClientScope:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      oauth2_client_id:
        type: integer
      scope_code:
        type: string
      updated_at:
        type: string
    type: object
  model.OAuth2Scope:
    properties:
      code:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      name:
        type: string
      type:
        description: basic,
        type: string
      updated_at:
        type: string
    type: object
  model.Pagination:
    properties:
      current:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  model.Role:
    properties:
      child_roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      code:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      name:
        type: string
      parent_code:
        type: string
      updated_at:
        type: string
    type: object
  model.TableListData:
    properties:
      list:
        type: object
      pagination:
        $ref: '#/definitions/model.Pagination'
        type: object
    type: object
  service.OAuth2ClientEditModel:
    properties:
      description:
        type: string
      name:
        type: string
      profile:
        type: string
      redirect_uri:
        type: string
      website:
        type: string
    type: object
  service.ResultClientInfo:
    properties:
      client_id:
        type: integer
      description:
        type: string
      name:
        type: string
      profile:
        type: string
      redirect_uri:
        type: string
      website:
        type: string
    type: object
  service.UserUpdateModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: 862860000@qq.com
    name: API Support
    url: https://github.com/nilorg/naas
  description: NilOrg认证授权服务Api详情.
  license:
    name: GNU General Public License v3.0
    url: https://github.com/nilorg/naas/blob/master/LICENSE
  termsOfService: https://github.com/nilorg
  title: NilOrg认证授权服务
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      description: 后台管理员登录
      parameters:
      - description: 用户名
        in: formData
        name: username
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            $ref: '#/definitions/api.Result'
      summary: 管理员登录
      tags:
      - 管理员（已弃用）
  /oauth2/clients:
    get:
      consumes:
      - application/json
      description: 查询客户端翻页
      parameters:
      - description: 当前页
        in: query
        name: current
        required: true
        type: integer
      - description: 页大小
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Result'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/model.TableListData'
                  - properties:
                      list:
                        $ref: '#/definitions/service.ResultClientInfo'
                    type: object
              type: object
      security:
      - OAuth2AccessCode: []
      summary: client
      tags:
      - OAuth2
    post:
      consumes:
      - application/json
      description: 创建客户端
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OAuth2ClientEditModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: client
      tags:
      - OAuth2
  /oauth2/clients/{client_id}:
    put:
      consumes:
      - application/json
      description: 根据客户端ID,修改客户端信息
      parameters:
      - description: client id
        in: path
        name: client_id
        required: true
        type: string
      - description: 客户端信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OAuth2ClientEditModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: client
      tags:
      - OAuth2
  /oauth2/clients/{client_id}/scopes:
    get:
      consumes:
      - application/json
      description: 查询客户端scope
      parameters:
      - description: 客户端ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.OAuth2ClientScope'
              type: object
      security:
      - OAuth2AccessCode: []
      summary: scope
      tags:
      - OAuth2
  /oauth2/scopes:
    get:
      consumes:
      - application/json
      description: 查询所有scope
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.OAuth2Scope'
              type: object
      security:
      - OAuth2AccessCode: []
      summary: scope
      tags:
      - OAuth2
  /roles:
    get:
      consumes:
      - application/json
      description: |-
        recursive:递归获取所有角色
        list:查询列表
      parameters:
      - description: 查询参数
        enum:
        - recursive
        - list
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Role'
                  type: array
              type: object
      security:
      - OAuth2AccessCode: []
      summary: 查询角色
      tags:
      - 角色
  /users:
    get:
      consumes:
      - application/json
      description: 查询用户翻页数据
      parameters:
      - description: 当前页
        in: query
        name: current
        required: true
        type: integer
      - description: 页大小
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Result'
            - properties:
                data:
                  $ref: '#/definitions/model.TableListData'
              type: object
      security:
      - OAuth2AccessCode: []
      summary: 查询用户
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.userCreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: 创建用户
      tags:
      - 用户
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID,删除一个用户
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: 删除一个用户
      tags:
      - 用户
    get:
      consumes:
      - application/json
      description: 根据用户ID,获取一个用户
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: 获取一个用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 根据用户ID,修改一个用户
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: string
      - description: 用户需要修改的信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.UserUpdateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Result'
      security:
      - OAuth2AccessCode: []
      summary: 修改一个用户
      tags:
      - 用户
securityDefinitions:
  OAuth2AccessCode:
    authorizationUrl: http://localhost:8080/oauth2/authorize
    flow: accessCode
    scopes:
      email: ' 用户emial'
      openid: ' 用户openid'
      phone: ' 用户手机号'
      profile: ' 用户资料'
    tokenUrl: http://localhost:8080/oauth2/token
    type: oauth2
swagger: "2.0"
