// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: pkg/proto/role.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ListRoleByOpenIDRequest 根据OpenID获取角色请求参数
type ListRoleByOpenIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId string `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
}

func (x *ListRoleByOpenIDRequest) Reset() {
	*x = ListRoleByOpenIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleByOpenIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleByOpenIDRequest) ProtoMessage() {}

func (x *ListRoleByOpenIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleByOpenIDRequest.ProtoReflect.Descriptor instead.
func (*ListRoleByOpenIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_role_proto_rawDescGZIP(), []int{0}
}

func (x *ListRoleByOpenIDRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleCode       string `protobuf:"bytes,3,opt,name=role_code,json=roleCode,proto3" json:"role_code,omitempty"`
	OrganizationId uint64 `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_pkg_proto_role_proto_rawDescGZIP(), []int{1}
}

func (x *UserRole) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserRole) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserRole) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *UserRole) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

// ListRoleByOpenIDResponse 根据OpenID获取角色响应参数
type ListRoleByOpenIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*UserRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ListRoleByOpenIDResponse) Reset() {
	*x = ListRoleByOpenIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleByOpenIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleByOpenIDResponse) ProtoMessage() {}

func (x *ListRoleByOpenIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleByOpenIDResponse.ProtoReflect.Descriptor instead.
func (*ListRoleByOpenIDResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_role_proto_rawDescGZIP(), []int{2}
}

func (x *ListRoleByOpenIDResponse) GetRoles() []*UserRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_pkg_proto_role_proto protoreflect.FileDescriptor

var file_pkg_proto_role_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x69, 0x6c, 0x6f, 0x72, 0x67, 0x2e, 0x6e,
	0x61, 0x61, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x22, 0x79, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x69, 0x6c, 0x6f, 0x72, 0x67,
	0x2e, 0x6e, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x32,
	0x7d, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x6e, 0x69,
	0x6c, 0x6f, 0x72, 0x67, 0x2e, 0x6e, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x69,
	0x6c, 0x6f, 0x72, 0x67, 0x2e, 0x6e, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x22,
	0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x6c,
	0x6f, 0x72, 0x67, 0x2f, 0x6e, 0x61, 0x61, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_role_proto_rawDescOnce sync.Once
	file_pkg_proto_role_proto_rawDescData = file_pkg_proto_role_proto_rawDesc
)

func file_pkg_proto_role_proto_rawDescGZIP() []byte {
	file_pkg_proto_role_proto_rawDescOnce.Do(func() {
		file_pkg_proto_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_role_proto_rawDescData)
	})
	return file_pkg_proto_role_proto_rawDescData
}

var file_pkg_proto_role_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_proto_role_proto_goTypes = []interface{}{
	(*ListRoleByOpenIDRequest)(nil),  // 0: nilorg.naas.pkg.proto.ListRoleByOpenIDRequest
	(*UserRole)(nil),                 // 1: nilorg.naas.pkg.proto.UserRole
	(*ListRoleByOpenIDResponse)(nil), // 2: nilorg.naas.pkg.proto.ListRoleByOpenIDResponse
}
var file_pkg_proto_role_proto_depIdxs = []int32{
	1, // 0: nilorg.naas.pkg.proto.ListRoleByOpenIDResponse.roles:type_name -> nilorg.naas.pkg.proto.UserRole
	0, // 1: nilorg.naas.pkg.proto.Role.ListRoleByOpenID:input_type -> nilorg.naas.pkg.proto.ListRoleByOpenIDRequest
	2, // 2: nilorg.naas.pkg.proto.Role.ListRoleByOpenID:output_type -> nilorg.naas.pkg.proto.ListRoleByOpenIDResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_proto_role_proto_init() }
func file_pkg_proto_role_proto_init() {
	if File_pkg_proto_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleByOpenIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleByOpenIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_role_proto_goTypes,
		DependencyIndexes: file_pkg_proto_role_proto_depIdxs,
		MessageInfos:      file_pkg_proto_role_proto_msgTypes,
	}.Build()
	File_pkg_proto_role_proto = out.File
	file_pkg_proto_role_proto_rawDesc = nil
	file_pkg_proto_role_proto_goTypes = nil
	file_pkg_proto_role_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoleClient is the client API for Role service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleClient interface {
	// ListRoleByOpenID 根据OpenID获取角色
	ListRoleByOpenID(ctx context.Context, in *ListRoleByOpenIDRequest, opts ...grpc.CallOption) (*ListRoleByOpenIDResponse, error)
}

type roleClient struct {
	cc grpc.ClientConnInterface
}

func NewRoleClient(cc grpc.ClientConnInterface) RoleClient {
	return &roleClient{cc}
}

func (c *roleClient) ListRoleByOpenID(ctx context.Context, in *ListRoleByOpenIDRequest, opts ...grpc.CallOption) (*ListRoleByOpenIDResponse, error) {
	out := new(ListRoleByOpenIDResponse)
	err := c.cc.Invoke(ctx, "/nilorg.naas.pkg.proto.Role/ListRoleByOpenID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleServer is the server API for Role service.
type RoleServer interface {
	// ListRoleByOpenID 根据OpenID获取角色
	ListRoleByOpenID(context.Context, *ListRoleByOpenIDRequest) (*ListRoleByOpenIDResponse, error)
}

// UnimplementedRoleServer can be embedded to have forward compatible implementations.
type UnimplementedRoleServer struct {
}

func (*UnimplementedRoleServer) ListRoleByOpenID(context.Context, *ListRoleByOpenIDRequest) (*ListRoleByOpenIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoleByOpenID not implemented")
}

func RegisterRoleServer(s *grpc.Server, srv RoleServer) {
	s.RegisterService(&_Role_serviceDesc, srv)
}

func _Role_ListRoleByOpenID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoleByOpenIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServer).ListRoleByOpenID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nilorg.naas.pkg.proto.Role/ListRoleByOpenID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServer).ListRoleByOpenID(ctx, req.(*ListRoleByOpenIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Role_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nilorg.naas.pkg.proto.Role",
	HandlerType: (*RoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRoleByOpenID",
			Handler:    _Role_ListRoleByOpenID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/role.proto",
}
